{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\15103\\\\Desktop\\\\frontend_flags\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\15103\\\\Desktop\\\\frontend_flags\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\15103\\\\Desktop\\\\frontend_flags\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState,useContext}from\"react\";import{useHistory,useLocation,withRouter}from\"react-router-dom\";import sprites from\"../images/sprites.svg\";import Country_Info from\"./Country_Info\";import{GetCountryInfo}from\"./GetCountryInfo\";export default withRouter(function Country_Page(_ref){var match=_ref.match,location=_ref.location;var code=match.params.id;var _useState=useState(code),_useState2=_slicedToArray(_useState,2),countryCode=_useState2[0],setCountryCode=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var history=useHistory();useEffect(function(){var updatedCode=location.pathname.slice(9);setCountryCode(updatedCode);function getCountry(){return _getCountry.apply(this,arguments);}function _getCountry(){_getCountry=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"https://restcountries.eu/rest/v2/alpha/\".concat(countryCode));case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;setCountry(data);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 13:_context.prev=13;return _context.finish(13);case 15:case\"end\":return _context.stop();}}},_callee,null,[[0,10,13,15]]);}));return _getCountry.apply(this,arguments);}getCountry();},[location,match.params.id,countryCode]);return/*#__PURE__*/React.createElement(\"div\",{className:\"button_container\"},/*#__PURE__*/React.createElement(\"button\",{className:\"button_arrow\",onClick:function onClick(e){return history.push(\"/\");}},/*#__PURE__*/React.createElement(\"svg\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"use\",{href:\"\".concat(sprites,\"#icon-arrow-left\")}))),/*#__PURE__*/React.createElement(Country_Info,{key:code,info:country}));});","map":{"version":3,"sources":["C:/Users/15103/Desktop/frontend_flags/src/components/Country_Page.js"],"names":["React","useEffect","useState","useContext","useHistory","useLocation","withRouter","Country_Info","GetCountryInfo","Country_Page","match","location","code","params","id","countryCode","setCountryCode","country","setCountry","history","updatedCode","pathname","slice","getCountry","fetch","response","json","data","console","log","e","push","sprites"],"mappings":"4eAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,UAArC,KAAuD,OAAvD,CACA,OAASC,UAAT,CAAqBC,WAArB,CAAkCC,UAAlC,KAAoD,kBAApD,C,2CAEA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CACA,OAASC,cAAT,KAA+B,kBAA/B,CAEA,cAAeF,CAAAA,UAAU,CAAC,QAASG,CAAAA,YAAT,MAA2C,IAAnBC,CAAAA,KAAmB,MAAnBA,KAAmB,CAAZC,QAAY,MAAZA,QAAY,CACnE,GAAMC,CAAAA,IAAI,CAAGF,KAAK,CAACG,MAAN,CAAaC,EAA1B,CADmE,cAG7BZ,QAAQ,CAACU,IAAD,CAHqB,wCAG5DG,WAH4D,eAG/CC,cAH+C,8BAIrCd,QAAQ,CAAC,IAAD,CAJ6B,yCAI5De,OAJ4D,eAInDC,UAJmD,eAKnE,GAAMC,CAAAA,OAAO,CAAGf,UAAU,EAA1B,CACAH,SAAS,CAAC,UAAM,CACd,GAAMmB,CAAAA,WAAW,CAAGT,QAAQ,CAACU,QAAT,CAAkBC,KAAlB,CAAwB,CAAxB,CAApB,CACAN,cAAc,CAACI,WAAD,CAAd,CAFc,QAICG,CAAAA,UAJD,wIAId,2LAE2BC,CAAAA,KAAK,kDACgBT,WADhB,EAFhC,QAEUU,QAFV,qCAKuBA,CAAAA,QAAQ,CAACC,IAAT,EALvB,QAKUC,IALV,eAMIT,UAAU,CAACS,IAAD,CAAV,CANJ,iFAQIC,OAAO,CAACC,GAAR,cARJ,+HAJc,6CAgBdN,UAAU,GACX,CAjBQ,CAiBN,CAACZ,QAAD,CAAWD,KAAK,CAACG,MAAN,CAAaC,EAAxB,CAA4BC,WAA5B,CAjBM,CAAT,CAkBA,mBACE,2BAAK,SAAS,CAAC,kBAAf,eACE,8BAAQ,SAAS,CAAC,cAAlB,CAAiC,OAAO,CAAE,iBAACe,CAAD,QAAOX,CAAAA,OAAO,CAACY,IAAR,CAAa,GAAb,CAAP,EAA1C,eACE,2BAAK,SAAS,CAAC,MAAf,eACE,2BAAK,IAAI,WAAKC,OAAL,oBAAT,EADF,CADF,CADF,cAME,oBAAC,YAAD,EAAc,GAAG,CAAEpB,IAAnB,CAAyB,IAAI,CAAEK,OAA/B,EANF,CADF,CAUD,CAlCwB,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useHistory, useLocation, withRouter } from \"react-router-dom\";\r\nimport sprites from \"../images/sprites.svg\";\r\nimport Country_Info from \"./Country_Info\";\r\nimport { GetCountryInfo } from \"./GetCountryInfo\";\r\n\r\nexport default withRouter(function Country_Page({ match, location }) {\r\n  const code = match.params.id;\r\n\r\n  const [countryCode, setCountryCode] = useState(code);\r\n  const [country, setCountry] = useState(null);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const updatedCode = location.pathname.slice(9);\r\n    setCountryCode(updatedCode);\r\n\r\n    async function getCountry() {\r\n      try {\r\n        const response = await fetch(\r\n          `https://restcountries.eu/rest/v2/alpha/${countryCode}`\r\n        );\r\n        const data = await response.json();\r\n        setCountry(data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n      }\r\n    }\r\n    getCountry();\r\n  }, [location, match.params.id, countryCode]);\r\n  return (\r\n    <div className=\"button_container\">\r\n      <button className=\"button_arrow\" onClick={(e) => history.push(\"/\")}>\r\n        <svg className=\"icon\">\r\n          <use href={`${sprites}#icon-arrow-left`}></use>\r\n        </svg>\r\n      </button>\r\n      <Country_Info key={code} info={country} />\r\n    </div>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}