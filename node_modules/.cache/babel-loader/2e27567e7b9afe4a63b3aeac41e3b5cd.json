{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\15103\\\\Desktop\\\\frontend_flags\\\\src\\\\components\\\\Country_Page.js\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { useHistory, useLocation, withRouter } from \"react-router-dom\";\nimport sprites from \"../images/sprites.svg\";\nimport Country_Info from \"./Country_Info\";\nimport { GetCountryInfo } from \"./GetCountryInfo\";\nexport default withRouter(function Country_Page({\n  match,\n  location\n}) {\n  const code = match.params.id;\n  const [countryCode, setCountryCode] = useState(code);\n  const [country, setCountry] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    const updatedCode = location.pathname.slice(9);\n    setCountryCode(updatedCode);\n\n    async function getCountry() {\n      try {\n        const response = await fetch(`https://restcountries.eu/rest/v2/alpha/${countryCode}`);\n        const data = await response.json();\n        setCountry(data);\n      } catch (err) {\n        console.log(err);\n      } finally {}\n    }\n\n    getCountry();\n  }, [location, match.params.id, countryCode]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: e => history.push(\"/\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    href: `${sprites}#icon-arrow-left`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Country_Info, {\n    key: code,\n    info: country,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["C:/Users/15103/Desktop/frontend_flags/src/components/Country_Page.js"],"names":["React","useEffect","useState","useContext","useHistory","useLocation","withRouter","Country_Info","GetCountryInfo","Country_Page","match","location","code","params","id","countryCode","setCountryCode","country","setCountry","history","updatedCode","pathname","slice","getCountry","response","fetch","data","json","err","console","log","e","push","sprites"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,UAAlC,QAAoD,kBAApD;;AAEA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,eAAeF,UAAU,CAAC,SAASG,YAAT,CAAsB;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAtB,EAA2C;AACnE,QAAMC,IAAI,GAAGF,KAAK,CAACG,MAAN,CAAaC,EAA1B;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAACU,IAAD,CAA9C;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAMiB,OAAO,GAAGf,UAAU,EAA1B;AACAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,WAAW,GAAGT,QAAQ,CAACU,QAAT,CAAkBC,KAAlB,CAAwB,CAAxB,CAApB;AACAN,IAAAA,cAAc,CAACI,WAAD,CAAd;;AAEA,mBAAeG,UAAf,GAA4B;AAC1B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,0CAAyCV,WAAY,EAD5B,CAA5B;AAGA,cAAMW,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAT,QAAAA,UAAU,CAACQ,IAAD,CAAV;AACD,OAND,CAME,OAAOE,GAAP,EAAY;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OARD,SAQU,CACT;AACF;;AACDL,IAAAA,UAAU;AACX,GAjBQ,EAiBN,CAACZ,QAAD,EAAWD,KAAK,CAACG,MAAN,CAAaC,EAAxB,EAA4BC,WAA5B,CAjBM,CAAT;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAGgB,CAAD,IAAOZ,OAAO,CAACa,IAAR,CAAa,GAAb,CAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,IAAI,EAAG,GAAEC,OAAQ,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME,oBAAC,YAAD;AAAc,IAAA,GAAG,EAAErB,IAAnB;AAAyB,IAAA,IAAI,EAAEK,OAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CAlCwB,CAAzB","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useHistory, useLocation, withRouter } from \"react-router-dom\";\r\nimport sprites from \"../images/sprites.svg\";\r\nimport Country_Info from \"./Country_Info\";\r\nimport { GetCountryInfo } from \"./GetCountryInfo\";\r\n\r\nexport default withRouter(function Country_Page({ match, location }) {\r\n  const code = match.params.id;\r\n\r\n  const [countryCode, setCountryCode] = useState(code);\r\n  const [country, setCountry] = useState(null);\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    const updatedCode = location.pathname.slice(9);\r\n    setCountryCode(updatedCode);\r\n\r\n    async function getCountry() {\r\n      try {\r\n        const response = await fetch(\r\n          `https://restcountries.eu/rest/v2/alpha/${countryCode}`\r\n        );\r\n        const data = await response.json();\r\n        setCountry(data);\r\n      } catch (err) {\r\n        console.log(err);\r\n      } finally {\r\n      }\r\n    }\r\n    getCountry();\r\n  }, [location, match.params.id, countryCode]);\r\n  return (\r\n    <div className=\"container\">\r\n      <button className=\"button\" onClick={(e) => history.push(\"/\")}>\r\n        <svg className=\"icon\">\r\n          <use href={`${sprites}#icon-arrow-left`}></use>\r\n        </svg>\r\n      </button>\r\n      <Country_Info key={code} info={country} />\r\n    </div>\r\n  );\r\n});\r\n"]},"metadata":{},"sourceType":"module"}