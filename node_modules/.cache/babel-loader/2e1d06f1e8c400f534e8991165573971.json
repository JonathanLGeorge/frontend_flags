{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\15103\\\\Desktop\\\\frontend_flags\\\\src\\\\components\\\\GetCountryInfo.js\";\nimport React, { createContext, useState, useEffect } from \"react\";\nexport const GetCountryInfo = createContext();\nexport default function CountryContextProvider(props) {\n  const [loading, setLoading] = useState(true);\n  const [countries, setCountries] = useState([]);\n  const [countryNames, setCountryName] = useState([]);\n\n  async function getCountryInfo() {\n    try {\n      const res = await fetch(\"https://restcountries.eu/rest/v2/all\");\n      const data = await res.json();\n      setCountries(data);\n      setCountryName(data.map(country => {\n        return {\n          name: country.name,\n          code: country.alph3Code\n        };\n      }));\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    setLoading(true);\n    getCountryInfo();\n  }, []);\n  return /*#__PURE__*/React.createElement(GetCountryInfo.Provider, {\n    value: {\n      countries,\n      countryNames,\n      setCountries,\n      getCountryInfo,\n      loading,\n      setLoading\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["C:/Users/15103/Desktop/frontend_flags/src/components/GetCountryInfo.js"],"names":["React","createContext","useState","useEffect","GetCountryInfo","CountryContextProvider","props","loading","setLoading","countries","setCountries","countryNames","setCountryName","getCountryInfo","res","fetch","data","json","map","country","name","code","alph3Code","error","console","log","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,MAAMC,cAAc,GAAGH,aAAa,EAApC;AAEP,eAAe,SAASI,sBAAT,CAAgCC,KAAhC,EAAuC;AACpD,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACS,YAAD,EAAeC,cAAf,IAAiCV,QAAQ,CAAC,EAAD,CAA/C;;AAEA,iBAAeW,cAAf,GAAgC;AAC9B,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAP,MAAAA,YAAY,CAACM,IAAD,CAAZ;AACAJ,MAAAA,cAAc,CACZI,IAAI,CAACE,GAAL,CAAUC,OAAD,IAAa;AACpB,eAAO;AACLC,UAAAA,IAAI,EAAED,OAAO,CAACC,IADT;AAELC,UAAAA,IAAI,EAAEF,OAAO,CAACG;AAFT,SAAP;AAID,OALD,CADY,CAAd;AAQD,KAZD,CAYE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAdD,SAcU;AACRf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAK,IAAAA,cAAc;AACf,GAHQ,EAGN,EAHM,CAAT;AAIA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLJ,MAAAA,SADK;AAELE,MAAAA,YAFK;AAGLD,MAAAA,YAHK;AAILG,MAAAA,cAJK;AAKLN,MAAAA,OALK;AAMLC,MAAAA;AANK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUGF,KAAK,CAACoB,QAVT,CADF;AAcD","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const GetCountryInfo = createContext();\r\n\r\nexport default function CountryContextProvider(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [countries, setCountries] = useState([]);\r\n  const [countryNames, setCountryName] = useState([]);\r\n\r\n  async function getCountryInfo() {\r\n    try {\r\n      const res = await fetch(\"https://restcountries.eu/rest/v2/all\");\r\n      const data = await res.json();\r\n      setCountries(data);\r\n      setCountryName(\r\n        data.map((country) => {\r\n          return {\r\n            name: country.name,\r\n            code: country.alph3Code,\r\n          };\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getCountryInfo();\r\n  }, []);\r\n  return (\r\n    <GetCountryInfo.Provider\r\n      value={{\r\n        countries,\r\n        countryNames,\r\n        setCountries,\r\n        getCountryInfo,\r\n        loading,\r\n        setLoading,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GetCountryInfo.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}